name: PIMA Diabetic Classifier Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'  # Replace '3.12.3' with the version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install Kaggle API
        run: pip install kaggle

      - name: Configure Kaggle API Credentials
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Download Kaggle Dataset
        run: kaggle datasets download -d uciml/pima-indians-diabetes-database --unzip --path ./data

      - name: List downloaded files
        run: ls -la ./data  # Optional: Check downloaded files for debugging

      - name: Run script
        run: |
          python PMI_Diabetic_Classifier.py  # Replace with your script name

      - name: Commit and Push Kaggle Files to GitHub
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add Kaggle downloaded files from workflow"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Output to GitHub
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p output  # Ensure the output directory exists
          cp /home/runner/work/PMI-Diabetic-Classifier/PMI-Diabetic-Classifier/best_model.joblib output/best_model_v1.joblib
          git status  # Check the status to debug what files are tracked/untracked
          git add output/best_model_v1.joblib  # Add the specific file directly
          git status  # Re-check to ensure it's staged
          git commit -m "Add best_model_v1.joblib generated from workflow" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
